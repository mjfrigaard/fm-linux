---
engine: knitr
knitr:
  opts_chunk: 
    collapse: true
    comment: '#'
---

# Syntax Reference {#sec-syn-ref}

```{bash}
#| label: setup
#| include: false
whoami
```


```{r}
#| label: common
#| include: false
source("_common.R")
```

```{r}
#| label: co_box_dev
#| echo: false
#| results: asis
#| eval: true
co_box(
  color = "r",
  look = "default", 
  hsize = "1.25", 
  size = "1.00", 
  header = "Caution", 
  fold = FALSE,
  contents = "This section is under development. Thank you for your patience.
  "
)
```

## [Help & Documentation]{style="font-size: 1.05em; font-weight: bold;"} 

### `man` {#sec-man}

Interface to the on-line reference manuals.

### `help` {#sec-help}

Display help for built-in commands.

## [Files & Directories]{style="font-size: 1.05em; font-weight: bold;"} 

### `cd` {#sec-cd}

Change directory.

### `ls` {#sec-ls}

List directory contents.

### `pwd` {#sec-pwd}

Print working directory.

### `mkdir` {#sec-mkdir}

Create a directory.

### `tree` {#sec-tree}

Display the directory structure of a path in a tree-like format, showing all the files and subdirectories under it.

### `cp` {#sec-cp}

Copy files or directories.

### `mv` {#sec-mv}

Move or rename files or directories.

### `rm` {#sec-rm}

Remove files or directories. By default, `rm` won't remove a directory without the `-R` or `-r` option.

<!--

```{r}
#| label: co_box_rm
#| echo: false
#| results: asis
#| eval: true
co_box(
  color = "o",
  look = "default", 
  hsize = "1.15", 
  size = "1.05", 
  header = "Warning", 
  fold = FALSE,
  contents = "\n
It's important to note here that the command-line is not very forgiving. Using `rm` is a powerful action with significant consequences, as it permanently deletes files, akin to shredding documents. There's usually no easy way to recover deleted files unless you have a backup.

> '*Linux is like a chainsaw. Chainsaws are powerful tools, and make many difficult tasks like cutting through thick logs quite easy. Unfortunately, this power comes with danger: chainsaws can cut just as easily through your leg.*' - Gary Bernhardt[^bernhardt]

[^bernhardt]: As quoted in [Bioinformatics Data Skills: Reproducible and Robust Research with Open Source Tools (2015) by Vince Buffalo](https://bit.ly/3sVBSne).
\n"
)
```

-->

### `ln` {#sec-ln}

Create links between files.


### `readlink` {#sec-readlink}

`readlink` displays the target of a symbolic link.

### `touch` {#sec-touch}

Create a new file or update the timestamp of existing files.

### `find` {#sec-find}

Search for files in a directory hierarchy.

### `locate` {#sec-locate}

Find files by name quickly using a database.

### `file` {#sec-file}

Determine file type.

### `stat` {#sec-stat}

Display file or file system status.

### `more` {#sec-more}

View file contents interactively.

![`more` iTerm2](img/more.gif){width='100%' fig-align='center'}

### `less` {#sec-less}

View file contents interactively.

![`less` iTerm2](img/less.gif){width='100%' fig-align='center'}

### `head` {#sec-head}

Output the first part of files.

### `tail` {#sec-tail}

Output the last part of files.

## [System Administration]{style="font-size: 1.05em; font-weight: bold;"} 

### `who` {#sec-who}

Show who is logged in.

### `whoami` {#sec-whoami}

Display current user name.

### `hostname` {#sec-hostname}

Show or set system’s network name.

### `date` {#sec-date}

Display or set the date and time.

### `uptime` {#sec-uptime}

Show how long the system has been running.

### `cal` {#sec-cal}

Shows a calendar of the current month or a specified month and year.

### `df` {#sec-df}

Report file system disk space usage.

### `du` {#sec-du}

Show disk usage statistics. 

### `ps` {#sec-ps}

Report a snapshot of the current processes.


### `free` {#sec-free}

Displays the amount of free and used memory in the system, including physical memory (RAM) and swap space.

### `top` {#sec-top}

Display tasks and system status interactively.


![`top` in iTerm2](img/top.gif){width='100%' fig-align='center'}

### `iotop` {#sec-iotop}

Monitor disk I/O usage by processes.

### `htop` {#sec-htop}

Interactive process viewer, similar to `top` but more configurable.

### `vmstat` {#sec-vmstat}

Report virtual memory statistics.

### `dmesg` {#sec-dmesg}

Display the kernel-related messages.

### `clear` {#sec-clear}

Clear the terminal screen.

### `yes` {#sec-yes}

Output a string repeatedly until killed. 

**NOTE:** Use **<kbd>Ctrl</kbd>** + **<kbd>C</kbd>** to interrupt the `yes` command.

### `exit` {#sec-exit}

Exits the shell or current command session.

### `xargs` {#sec-xargs}

Build and execute command lines from standard input.

### `crontop` {#sec-crontop}

Schedule periodic background work.

### `systemctl` {#sec-systemctl}

Control the systemd system and service manager.

### `journalctl` {#sec-journalctl}

Query and display messages from the journal.

## [Variables]{style="font-size: 1.05em; font-weight: bold;"}

### `set` {#sec-set}

`set` is used to display all shell variables and functions, and to configure shell options and positional parameters.

### `unset` {#sec-unset}

`unset` is used to remove a shell or environment variable, effectively deleting it from the current shell session.

### `export` {#sec-export}

`export`is used to set an environment variable and make it available to child processes spawned from the current shell session.

## [Text Processing]{style="font-size: 1.05em; font-weight: bold;"} 

### `cat` {#sec-cat}

Concatenate files and print on the standard output.

### `echo` {#sec-echo}

Outputs the strings it is given to the terminal.

### `grep` {#sec-grep}

Print lines matching a pattern.

### `sort` {#sec-sort}

Sort lines of text files.

### `uniq` {#sec-uniq}

Report or omit repeated lines.

### `cut` {#sec-cut}

Remove sections from each line of files.

### `paste` {#sec-paste}

Merge lines of files.

### `join` {#sec-join}

Join lines of two files on a common field.

### `comm` {#sec-comm}

Compare two sorted files line by line.

### `diff` {#sec-diff}

Compare files line by line.

### `wc` {#sec-wc}

Print newline, word, and byte counts for each file.

### `seq` {#sec-seq}

The `seq` command generates a sequence of numbers, with customizable start, stop, and step values, and outputs them to standard output.

### `sed` {#sec-sed}

Stream editor for filtering and transforming text.

### `awk` {#sec-awk}

Programming language for data extraction and reporting.

## [Networking]{style="font-size: 1.05em; font-weight: bold;"} 

### `ping` {#sec-ping}

Check the network connection to another host.

### `netstat` {#sec-netstat}

Display network connections, routing tables, interface statistics, masquerade connections, and multicast memberships.

### `ss` {#sec-ss}

Utility to investigate sockets.

### `ifconfig` {#sec-ifconfig}

Configure or display network interface parameters for a network using TCP/IP.

### `traceroute` {#sec-traceroute}

Print the route packets take to network host.

## [File Archiving & Transfer]{style="font-size: 1.05em; font-weight: bold;"} 

### `tar` {#sec-tar}

Store and extract files from a tape or disk archive.

### `gzip` {#sec-gzip}

Compress or expand files.

### `zip` {#sec-zip}

Package and compress (archive) files.

### `scp` {#sec-scp}

Secure copy (remote file copy program).

### `rsync` {#sec-rsync}

Fast, versatile, remote (and local) file-copying tool.

## [User Management]{style="font-size: 1.05em; font-weight: bold;"} 

### `chown` {#sec-chown}

The `chown` command changes the owner and/or group of specified files or directories, thereby altering who has control over these resources.

### `chmod` {#sec-chmod}

The `chmod` command changes the access permissions of file system objects (files and directories), allowing users to specify who can read, write, or execute them.

### `sudo` {#sec-sudo}

Execute a command as another user, typically the superuser.

### `useradd` {#sec-useradd}

Create a new user or update default new user information.

### `usermod` {#sec-usermod}

Modify a user's system information.

### `userdel` {#sec-userdel}

Delete a user account and related files.

### `groupadd` {#sec-groupadd}

Create a new group.

### `passwd` {#sec-passwd}

Update a user’s authentication tokens/password.

## [Disk Management]{style="font-size: 1.05em; font-weight: bold;"} 

### `fdisk` {#sec-fdisk}

Partition table manipulator for Linux.

### `parted` {#sec-parted}

A partition manipulation program.

### `mkfs` {#sec-mkfs}

Build a Linux filesystem on a device, usually a hard disk partition.

### `mount` {#sec-mount}

Mount a filesystem.

### `umount` {#sec-umount}

Unmount file systems.

```{r}
#| label: git_contrib_box
#| echo: false
#| results: asis
#| eval: true
git_contrib_box()
```
