---
engine: knitr
knitr:
  opts_chunk: 
    collapse: true
    comment: '#'
---

# Syntax Reference {#sec-syn-ref}

```{bash}
#| label: setup
#| include: false
whoami
```


```{r}
#| label: common
#| include: false
source("_common.R")
```

```{r}
#| label: co_box_dev
#| echo: false
#| results: asis
#| eval: true
co_box(
  color = "r",
  look = "default", 
  hsize = "1.25", 
  size = "1.00", 
  header = "Caution", 
  fold = FALSE,
  contents = "This section is under development. Thank you for your patience.
  "
)
```

## [Help & Documentation]{style="font-size: 1.05em; font-weight: bold;"} 

### `man` {#sec-man}

Interface to the on-line reference manuals.

### `help` {#sec-help}

Display help for built-in commands.

## [Files & Directories]{style="font-size: 1.05em; font-weight: bold;"} 

### `cd` {#sec-cd}

Change directory.

```{bash}
cd /bin # change location
```

### `ls` {#sec-ls}

List directory contents.

```{bash}
cd /bin # change location
ls # what's in here?
```

### `pwd` {#sec-pwd}

Print working directory.

```{bash}
cd /bin # change location
pwd # where am I?
```

### `mkdir` {#sec-mkdir}

Create a directory.

```bash
mkdir out
mkdir doc
```

### `tree` {#sec-tree}

Display the directory structure of a path in a tree-like format, showing all the files and subdirectories under it.

```{bash}
#| eval: false
tree data
# data
# ├── README.md
# ├── ajperlis_epigrams.txt
# ├── music_vids.tsv
# ├── pwrds.csv
# ├── pwrds.tsv
# ├── roxanne.txt
# ├── roxanne_orig.txt
# ├── roxanne_rev.txt
# ├── trees.tsv
# ├── vg_hof.tsv
# ├── who_tb_data.tsv
# ├── who_tb_data.txt
# ├── wu_tang.csv
# ├── wu_tang.dat
# ├── wu_tang.tsv
# └── wu_tang.txt
# 
# 1 directory, 16 files
```


### `cp` {#sec-cp}

Copy files or directories.

```{bash}
cp myfile.txt data/myfile.txt
# confirm copy
ls data
```

### `mv` {#sec-mv}

Move or rename files or directories.

```{bash}
# create folder
mkdir doc
# move file
mv data/myfile.txt doc/myfile.txt 
# confirm move
ls doc
```

### `rm` {#sec-rm}

Remove files or directories.

```{bash}
#| error: true
# remove doc folder
rm doc
```

By default, `rm` won't remove a directory without the `-R` or `-r` option.

<!--

```{r}
#| label: co_box_rm
#| echo: false
#| results: asis
#| eval: true
co_box(
  color = "o",
  look = "default", 
  hsize = "1.15", 
  size = "1.05", 
  header = "Warning", 
  fold = FALSE,
  contents = "\n
It's important to note here that the command-line is not very forgiving. Using `rm` is a powerful action with significant consequences, as it permanently deletes files, akin to shredding documents. There's usually no easy way to recover deleted files unless you have a backup.

> '*Unix is like a chainsaw. Chainsaws are powerful tools, and make many difficult tasks like cutting through thick logs quite easy. Unfortunately, this power comes with danger: chainsaws can cut just as easily through your leg.*' - Gary Bernhardt[^bernhardt]

[^bernhardt]: As quoted in [Bioinformatics Data Skills: Reproducible and Robust Research with Open Source Tools (2015) by Vince Buffalo](https://bit.ly/3sVBSne).
\n"
)
```

-->

```{bash}
# add option 
rm -R doc
```

### `ln` {#sec-ln}

Create links between files.

```bash
ln -s /path/to/original /path/to/link
```

### `touch` {#sec-touch}

Create a new file or update the timestamp of existing files.

```{bash}
#| eval: false
touch newfile.txt
```

### `find` {#sec-find}

Search for files in a directory hierarchy.

### `locate` {#sec-locate}

Find files by name quickly using a database.

```{bash}
#| eval: false
locate bin
```

### `file` {#sec-file}

Determine file type.

```{bash}
#| eval: false
file /usr/bin
```

### `stat` {#sec-stat}

Display file or file system status.

## [System Administration]{style="font-size: 1.05em; font-weight: bold;"} 

### `who` {#sec-who}

Show who is logged in.

```{bash}
#| eval: false 
who
#  username       console      Apr  9 03:20 
#  username       ttys000      Apr  9 03:42
```

### `whoami` {#sec-whoami}

Display current user name.

```{bash}
#| eval: false 
whoami
# username
```

### `hostname` {#sec-hostname}

Show or set system’s network name.

```{bash}
#| eval: false
hostname
#  Users-MacBook-Pro-2.local
```

### `date` {#sec-date}

Display or set the date and time.

```{bash}
#| eval: false 
date
#  Wed Apr 10 03:39:52 MST 2024
```

### `uptime` {#sec-uptime}

Show how long the system has been running.

```{bash}
#| eval: false 
uptime
#  3:39  up 11:23, 2 users, load averages: 3.82 3.21 3.00
```

### `cal` {#sec-cal}

Shows a calendar of the current month or a specified month and year.

```{bash}
#| eval: false 
cal
#>      April 2024       
#> Su Mo Tu We Th Fr Sa  
#>     1  2  3  4  5  6  
#>  7  8  9 10 11 12 13  
#> 14 15 16 17 18 19 20  
#> 21 22 23 24 25 26 27  
#> 28 29 30    
```

### `df` {#sec-df}

Report file system disk space usage.

```{bash}
#| eval: false 
df
# Filesystem                       512-blocks      Used Available Capacity iused     ifree %iused  Mounted on
# /dev/disk1s1s1                    976490576  20002808  84066432    20%  403755 420332160    0%   /
# devfs                                   395       395         0   100%     684         0  100%   /dev
# /dev/disk1s3                      976490576   5059576  84066432     6%    5077 420332160    0%   /System/Volumes/Preboot
# /dev/disk1s5                      976490576   4194808  84066432     5%       2 420332160    0%   /System/Volumes/VM
# /dev/disk1s6                      976490576     39800  84066432     1%      19 420332160    0%   /System/Volumes/Update
# /dev/disk1s2                      976490576 860380424  84066432    92% 6238430 420332160    1%   /System/Volumes/Data
# map auto_home                             0         0         0   100%       0         0     -   /System/Volumes/Data/home
```


### `ps` {#sec-ps}

Report a snapshot of the current processes.

```{bash}
#| eval: false 
ps
#   PID TTY           TIME CMD
# 13692 ttys000    0:00.03 -zsh
# 13703 ttys001    0:00.03 -zsh
```

### `top` {#sec-top}

Display tasks and system status interactively.

```{bash}
#| eval: false 
top
```


![`top` in iTerm2](img/top.gif){width='100%' fig-align='center'}

### `iotop` {#sec-iotop}

Monitor disk I/O usage by processes.

### `htop` {#sec-htop}

Interactive process viewer, similar to `top` but more configurable.

### `vmstat` {#sec-vmstat}

Report virtual memory statistics.

### `dmesg` {#sec-dmesg}

Display the kernel-related messages.

### `clear` {#sec-clear}

Clear the terminal screen.

```{bash}
#| eval: false
clear
```

### `yes` {#sec-yes}

Output a string repeatedly until killed.

```{bash}
#| eval: false
yes
```

### `exit` {#sec-exit}

Exits the shell or current command session.

```{bash}
#| eval: false
exit
```

### `xargs` {#sec-xargs}

Build and execute command lines from standard input.

### `crontop` {#sec-crontop}

Schedule periodic background work.

### `systemctl` {#sec-systemctl}

Control the systemd system and service manager.

### `journalctl` {#sec-journalctl}

Query and display messages from the journal.

## [Text Processing]{style="font-size: 1.05em; font-weight: bold;"} 

### `cat` {#sec-cat}

Concatenate files and print on the standard output.

### `echo` {#sec-echo}

Outputs the strings it is given to the terminal.

### `less` {#sec-less}

View file contents interactively.

```{bash}
#| eval: false
less data/vg_hof.tsv
```

![Enter `less` in the Terminal to scroll](img/less.gif){width='100%' fig-align='center'}

### `head` {#sec-head}

Output the first part of files.

### `tail` {#sec-tail}

Output the last part of files.

### `grep` {#sec-grep}

Print lines matching a pattern.

### `sort` {#sec-sort}

Sort lines of text files.

### `uniq` {#sec-uniq}

Report or omit repeated lines.

### `cut` {#sec-cut}

Remove sections from each line of files.

```{bash}
who | cut -c 1-16,26-42
```

### `paste` {#sec-paste}

Merge lines of files.

### `join` {#sec-join}

Join lines of two files on a common field.

### `comm` {#sec-comm}

Compare two sorted files line by line.

### `diff` {#sec-diff}

Compare files line by line.

### `wc` {#sec-wc}

Print newline, word, and byte counts for each file.

### `sed` {#sec-sed}

Stream editor for filtering and transforming text.

### `awk` {#sec-awk}

Programming language for data extraction and reporting.

## [Networking]{style="font-size: 1.05em; font-weight: bold;"} 

### `ping` {#sec-ping}

Check the network connection to another host.

### `netstat` {#sec-netstat}

Display network connections, routing tables, interface statistics, masquerade connections, and multicast memberships.

### `ss` {#sec-ss}

Utility to investigate sockets.

### `ifconfig` {#sec-ifconfig}

Configure or display network interface parameters for a network using TCP/IP.

### `traceroute` {#sec-traceroute}

Print the route packets take to network host.

## [File Archiving & Transfer]{style="font-size: 1.05em; font-weight: bold;"} 

### `tar` {#sec-tar}

Store and extract files from a tape or disk archive.

### `gzip` {#sec-gzip}

Compress or expand files.

### `zip` {#sec-zip}

Package and compress (archive) files.

### `scp` {#sec-scp}

Secure copy (remote file copy program).

### `rsync` {#sec-rsync}

Fast, versatile, remote (and local) file-copying tool.

## [User Management]{style="font-size: 1.05em; font-weight: bold;"} 

### `chown` {#sec-chown}

Change file owner and group.

### `chmod` {#sec-chmod}

Change file access permissions.

### `sudo` {#sec-sudo}

Execute a command as another user, typically the superuser.

### `useradd` {#sec-useradd}

Create a new user or update default new user information.

### `usermod` {#sec-usermod}

Modify a user's system information.

### `userdel` {#sec-userdel}

Delete a user account and related files.

### `groupadd` {#sec-groupadd}

Create a new group.

### `passwd` {#sec-passwd}

Update a user’s authentication tokens/password.

## [Disk Management]{style="font-size: 1.05em; font-weight: bold;"} 

### `fdisk` {#sec-fdisk}

Partition table manipulator for Linux.

### `parted` {#sec-parted}

A partition manipulation program.

### `mkfs` {#sec-mkfs}

Build a Linux filesystem on a device, usually a hard disk partition.

### `mount` {#sec-mount}

Mount a filesystem.

### `umount` {#sec-umount}

Unmount file systems.

```{r}
#| label: git_contrib_box
#| echo: false
#| results: asis
#| eval: true
git_contrib_box()
```
