{
  "hash": "15f996f8d3f8f6bfea6447a941e0eb69",
  "result": {
    "engine": "knitr",
    "markdown": "---\nengine: knitr\nknitr:\n  opts_chunk: \n    collapse: true\n---\n\n\n\n\n\n# Introduction {#sec-intro}\n\n\n\n\n\n\n\n\n\n\n:::: {.callout-warning collapse='false' appearance='default' icon='false'}\n\n## [Caution]{style='font-weight: bold; font-size: 1.25em;'}\n\n::: {style='font-size: 1.00em; color: #282b2d;'}\n\n\nThis section is being revised. Thank you for your patience.\n\n::: \n\n::::\n\n\n\n\n\n## [The Tale of Unix]{style=\"font-size: 1.05em; font-weight: bold;\"}\n\nImagine Unix and Linux as cars in the vast landscape of automobile manufacturers. Our story begins in the late 1960s at AT&T's Bell Labs—a significant moment in the history of technology. Unix was born out of a desire for a more flexible and portable operating system. In a time when computers were as big as rooms, Unix represented the custom-built car designed by a prestigious automaker. It was tailored to specific customers who needed top-end performance and reliability and was often used by large corporations or organizations.\n\n### Unix Philosophy\n\nUnix was a breath of fresh air, designed with a simplicity and elegance that set it apart. Its portability, the ability to run on different types of hardware, was a game-changer. Over time, Unix evolved into a comprehensive operating system, incorporating essential commands and operations and setting a new standard for efficiency and innovation.\n\nThe Unix philosophy (i.e., the foundational tools and techniques) became a blueprint for how computers could efficiently and securely manage tasks like organizing files or running software. This philosophy would eventually guide other ‘car manufacturers’ in creating their versions.\n\n## [The Emergence of Linux]{style=\"font-size: 1.05em; font-weight: bold;\"}\n\nFast forward a few decades to 1991, when a Finnish student named Linus Torvalds decided to create his free operating system kernel inspired by Unix. At the heart of the Linux operating system, this kernel was made freely available to anyone who wanted to use or improve it. \n\n### Open-source\n\nLinux flourished with the help of developers around the world. It’s a testament to what collaboration and shared goals can achieve. Like a kit car designed by a community of enthusiasts, Linux allows anyone to assemble it with different parts, engines, and even paint (i.e., a fully customizable operating system). This global effort resulted in an operating system that is free, incredibly powerful, and reliable.\n\nMaking Linux free also meant anyone could contribute their skills, refine the codebase, and share the fruits of their labor. This open-source community of developers eventually cultivated various specialties, known as “distributions,” each with a unique set of tools and embellishments, yet all rooted in the same foundational teachings.\n\n\n\n\n\n\n:::: {.callout-note collapse='true' appearance='default' icon='false'}\n\n## [Modern Uses of Linux]{style='font-weight: bold; font-size: 1.10em;'}\n\n::: {style='font-size: 1.0em; color: #282b2d;'}\n\n\n\n\nToday, Unix and Linux are everywhere. They're the invisible forces behind much of the Internet and are responsible for running servers, desktops, smartphones, and even household appliances. \n\n- **Servers and Supercomputers**: The majority of the web servers powering the internet, as well as the world's most powerful supercomputers, run on Linux due to its stability, security, and efficiency.\n\n- **Desktops**: Although not as common on desktops as Windows or macOS, Linux distributions offer a free, customizable alternative for users.\n\n- **Smartphones**: Android, the most popular mobile operating system, is powered by a Linux kernel, making Linux the silent workhorse behind billions of smartphones.\n\n- **Embedded Systems**: From smartwatches to smart home devices, Linux is often the go-to choice for running embedded systems thanks to its scalability and low cost.\n\nUnix and Linux have grown from niche systems used by academics and researchers to foundational elements that power much of the digital world. They exemplify the power of open collaboration and innovation, showing how a small project or idea can grow and change the world.\n\n::: \n\n::::\n\n\n\n\n\n## [The Shell]{style=\"font-size: 1.05em; font-weight: bold;\"}\n\nIn the story of Unix and Linux, @sec-shells are the car's dashboards and controls--the interface between the driver and the car’s engine. Shells translate commands into actions a computer can understand and execute.\n\nIf Linux is the environment *where* the heavy lifting of computing happens--managing files, running programs, and controlling hardware--then the shell commands are the language and syntax that spell out *what* computational work happens. \n\n***\n\n## [Recap]{style=\"font-size: 1.05em; font-weight: bold;\"}\n\nTo summarize, both are Unix and Linux are analogous to vehicles designed for transportation, but with a few important differences: \n\n* Unix is like a high-end, custom-built car designed for a specific market, offering luxury, reliability, and exclusivity.\n\n* Linux is like a kit car that can be built, modified, and customized however the user likes, with support from a large and active community of other enthusiasts.\n\n In both Unix and Linux, Shells are essential for accessing the full power of the system, whether we're making routine adjustments or performing complex configurations.\n\n\n\n\n\n\n\n:::: {.callout-note collapse='false' appearance='simple' icon=false}\n\n## [See a typo, error, or something missing?]{style='font-weight: bold; font-size: 1.15em;'}\n\n::: {style='font-size: 1.00em; color: #282b2d;'}\n\n\nPlease open an issue on [GitHub.](https://github.com/mjfrigaard/fm-unix/issues/new)\n\n::: \n\n::::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}