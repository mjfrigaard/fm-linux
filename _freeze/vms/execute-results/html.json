{
  "hash": "6239b32baa8e27cdd0211be070feb842",
  "result": {
    "engine": "knitr",
    "markdown": "---\nengine: knitr\nknitr:\n  opts_chunk: \n    collapse: true\n    \n---\n\n\n\n\n# Virtual Machines {#sec-vms}\n\n\n\n\n\n\n\n\n\n:::: {.callout-warning collapse='false' appearance='default' icon='false'}\n\n## [Caution]{style='font-weight: bold; font-size: 1.25em;'}\n\n::: {style='font-size: 1.00em; color: #282b2d;'}\n\n\nThis section is being revised. Thank you for your patience.\n\n::: \n\n::::\n\n\n\n\nVirtual machines (VMs) offer a flexible way to run Linux environments on top of your existing operating system, regardless of whether it’s Windows, macOS, or another Linux distribution. This chapter explores the setup process for virtual machines, highlighting popular VM software like VirtualBox and VMware.\n\n### [Virtualization Software]{style=\"font-size: 1.05em; font-weight: bold;\"}\n\nSetting up Linux on virtual machines (VMs) is a valuable technique for running different operating systems on a single physical machine, which is helpful for development, testing, server deployment, and more. Several virtualization tools are available, but the most popular ones include:\n\n<br>\n\n#### ![](img/virtualbox-logo.png){fig-align='right' width='15%'} VirtualBox\n\n**[VirtualBox](https://www.virtualbox.org/)** is an open-source option that provides a good balance of features and simplicity. It runs on Windows, Linux, and macOS and supports numerous Linux distributions and Linux variants.\n\n\n#### ![](img/vmware-workstation-logo.png){fig-align='right' width='10%'} VMware Workstation \n\n**[VMware Workstation](https://www.vmware.com/products/workstation-pro.html)** is a commercial product that supports a wide range of guest operating systems, from the latest Windows and Linux distributions to older versions, ensuring compatibility across various applications and testing scenarios.\n\n#### ![](img/vmware-fusion-logo.png){fig-align='right' width='10%'} VMware Fusion \n\n\n**[VMware Fusion](https://www.vmware.com/products/fusion.html)** is tailored for macOS, allowing Mac users to run Windows, Linux, and other operating systems as virtual machines without rebooting. It integrates well with macOS, including support for Touch Bar and Retina display optimizations.\n\n####  ![](img/vmware-parallels-logo.png){fig-align='right' width='10%'} Parallels Desktop\n\n**[Parallels Desktop](https://www.parallels.com/products/desktop/)** is a commercial product predominantly used on macOS. Parallels is known for its high performance and seamless integration with the host OS, making it easy to run Linux alongside macOS.\n\n### [Linux Distributions]{style=\"font-size: 1.05em; font-weight: bold;\"}\n\nDownload the ISO file for the Linux or Linux distribution you want to install. Popular Linux distributions include [Ubuntu](https://ubuntu.com/), [Fedora](https://fedoraproject.org/), and [CentOS](https://www.centos.org/). For a more Linux-like experience, consider [FreeBSD](https://www.freebsd.org/) or [OpenBSD](https://www.openbsd.org/). Each distribution has its unique characteristics, making them suitable for different types of users and use cases:\n\n<br>\n\n#### ![](img/ubuntu-logo.png){fig-align='right' width='10%'} Ubuntu\n\n**User-Friendliness**: Ubuntu is widely recognized for its user-friendliness and ease of use, making it a popular choice for those new to Linux. The default desktop environment, GNOME (formerly Unity), provides a clean and functional interface.\n\n**Software Availability**: Ubuntu has vast software repositories that ensure easy software installation through the Ubuntu Software Center and advanced package management with APT and snap packages. This extensive support makes it ideal for users who need access to a wide variety of applications.\n\n**Regular Releases**: Ubuntu follows a predictable release cycle, with new versions released every six months and Long-Term Support (LTS) releases every two years. LTS versions are supported for five years, providing stability and security, which is crucial for enterprise environments.\n\n**Community and Support**: Ubuntu benefits from a strong community and professional support from Canonical, offering extensive documentation, active forums, and commercial support options.\n\n#### ![](img/fedora-logo.png){fig-align='right' width='10%'} Fedora\n\n**Cutting-Edge Technology**: Fedora is known for its commitment to innovation and features cutting-edge technology, making it an excellent choice for software developers and community members who want to work with the latest advancements in free and open source software.\n\n**RPM Package Management**: It uses the RPM package manager, with a front-end tool called DNF, which provides powerful package management capabilities. Fedora is also known for its robust updates and upgrade process.\n\n**Security Features**: Fedora includes strong security features by default, like SELinux, which provides robust access control mechanisms. Fedora's emphasis on security makes it a favorable option for security-conscious users.\n\n**Fedora Spins**: The availability of different \"spins\" provides versions of Fedora with various desktop environments, such as KDE, XFCE, LXQT, Mate, Cinnamon, and more, catering to personal preferences for different desktop experiences.\n\n#### ![](img/centos-logo.png){fig-align='right' width='10%'} CentOS\n\n**Enterprise-Level Stability**: CentOS is a community-supported distribution derived from the sources of Red Hat Enterprise Linux (RHEL). This origin ensures that CentOS is not only stable and reliable but also benefits from enterprise-level testing and patches, making it ideal for servers and enterprise environments.\n\n**Long-Term Support**: CentOS releases are supported for up to 10 years, making it a stable platform for long-term projects in corporate settings where long support cycles are crucial.\n\n**No-Cost**: While providing an enterprise-grade operating system, CentOS is completely free, which reduces the total cost of ownership for businesses and developers who need a reliable, stable environment without the expense of a commercial license.\n\n**Binary Compatibility with RHEL**: Being binary compatible with RHEL means that software applications developed for RHEL can run seamlessly on CentOS, which is particularly important for ensuring the broad compatibility of software and services in professional environments.\n\n## [![](img/virtualbox-logo.png){fig-align='right' width='10%'} VirtualBox & ![](img/ubuntu-logo.png){fig-align='right' width='8%'} Ubuntu]{style=\"font-size: .99em; font-weight: bold;\"}\n\nIn this section we'll cover how to setup VirtualBox and Ubuntu. We'll download VirtualBox, select a Linux distribution, configuring the hardware and storage, and launch the virtual machine.\n\n### Download\n\nDownload and install VirtualBox from their [website](https://www.virtualbox.org/wiki/Downloads). I'm using macOS, so it's a `VirtualBox-7.0.20-163906-OSX.dmg` file: \n\n:::{#fig-virtualbox-install}\n\n![](img/virtualbox-install.png){#fig-virtualbox-install fig-align='center' width='90%'}\n\nDouble-click the `VirtualBox.pkg` file to install\n:::\n\nAfter installing VirtualBox, download a Linux distribution (I'm using Ubuntu). I saved this `.iso` file in the same folder as the `VirtualBox` file:\n\n```sh\n/Applications/VirtualBox/\n├── VirtualBox-7.0.20-163906-OSX.dmg\n└── ubuntu-24.04-desktop-amd64.iso\n\n1 directory, 2 files\n```\n\nClick **New** in the VirtualBox manager and name the Virtual Machine and Operating System:\n\n::: {#fig-virtualbox-manager-new}\n\n![](img/virtualbox-manager-new.png){#fig-virtualbox-manager-new fig-align='center' width='90%'}\n\nNew Virtual Machine on VirtualBox\n:::\n\n### Create\n\nCreate the new ISO image be adding the path to the downloaded Ubuntu file (`ubuntu-24.04-desktop-amd64.iso`).\n\n::: {#fig-virtualbox-create-image}\n\n![](img/virtualbox-create-image.png){#fig-virtualbox-ceate-image fig-align='center' width='90%'}\n\nCreating new Ubuntu ISO image\n:::\n\nClick the **Skip Unattended Installation** checkbox and **Next**.\n\n### Configure\n\nIn this window we'll configure the Ubuntu image. I've chosen to allocate 1/4 of the memory and processors on my machine to the image, but you can experiment with both settings to find the best configuration that fits your needs. \n\n::: {#fig-virtualbox-configure-image}\n\n![](img/virtualbox-configure-image.png){#fig-virtualbox-ceate-image fig-align='center' width='90%'}\n\nConfigure base memory and processors on Ubuntu ISO image\n:::\n\nIn the next window we'll set the storage for this image (I've left the default). \n\n::: {#fig-virtualbox-image-storage}\n\n![](img/virtualbox-image-storage.png){#fig-virtualbox-image-storage fig-align='center' width='90%'}\n\nConfigure hard disk on Ubuntu ISO image\n:::\n\nThe final window is a summary of our new virtual machine. \n\n::: {#fig-virtualbox-image-summary}\n\n![](img/virtualbox-image-summary.png){#fig-virtualbox-image-summary fig-align='center' width='90%'}\n\nUbuntu ISO image Summary \n:::\n\nClick **Finish** to create the image. \n\n### Launch\n\nBack in the VirtualBox Manager, we can run this new virtual machine by clicking **Start**. \n\n::: {#fig-virtualbox-launch-ubuntu-image}\n\n![](img/virtualbox-launch-ubuntu-image.png){#fig-virtualbox-launch-ubuntu-image fig-align='center' width='90%'}\n\nStart virtual machine\n:::\n\nAfter clicking **Start**, a new window will open and attempt to start the virtual machine. Use the arrow keys to select *Try or Install Ubuntu*:\n\n::: {#fig-virtualbox-try-install-ubuntu}\n\n![](img/virtualbox-try-install-ubuntu.png){#fig-virtualbox-try-install-ubuntu fig-align='center' width='90%'}\n\nTry or Install Ubuntu\n:::\n\nFinish the installation steps for Ubuntu for your liking.\n\n\n::: {#fig-virtualbox-install-ubuntu}\n\n![](img/virtualbox-install-ubuntu.png){#fig-virtualbox-install-ubuntu fig-align='center' width='90%'}\n\nComplete Ubuntu Installation\n:::\n\nCreating virtual machines is an essential skill for those experimenting with Linux systems in an isolated environment.\n\n## [Recap]{style=\"font-size: 1.05em; font-weight: bold;\"}\n\nThis chapter covered virtual machines and Linux distributions. Specifically, we discussed: \n\n1. Setting up Linux on virtual machines, highlighting the process and popular virtualization software options.   \n    * **Open-source option**: VirtualBox\n    * **Commercial options**: VMware Workstation, VMware Fusion, and Parallels Desktop\n    \n\n2. The key features of three major Linux distributions: \n    * **Ubuntu**: known for its user-friendliness\n    * **Fedora**: recognized for its cutting-edge technology\n    * **CentOS**: valued for its enterprise-level stability\n    \nEach of these distributions brings its strengths and is tailored to different segments of the Linux user base, from desktop users and hobbyists to developers and enterprise clients.\n\n\n<!--\n## [Setup]{style=\"font-size: 1.15em; font-weight: bold;\"}\n\nIn **VirtualBox**: Click “New” to start the wizard. Name your VM, select the type and version of OS (e.g., Linux and then Ubuntu), and follow the steps to allocate resources like disk space and memory. Select the ISO file as the startup disk.\n\nIn **VMware or Parallels**: Launch the software, select “Create a New Virtual Machine,” and follow the wizard. You will be prompted to choose the downloaded ISO file as the installation source.\n\n### Install\n\nAfter setting up the VM and booting from the ISO, you’ll enter the setup process of your chosen Linux OS. Install the OS by following the on-screen instructions, which typically involve setting up partitions, selecting your time zone, and creating user accounts.\n\n### Configure\n\nAfter installation, you might need to install additional tools for enhanced functionality:\n\n**VirtualBox Guest Additions**: These enhance performance and usability, including better video resolutions, seamless mouse transitions, and shared folders.\n\n**VMware Tools or Parallels Tools**: Similar to VirtualBox Guest Additions, these improve the integration and performance of the guest operating system.\n\n### Reboot\n\nOnce everything is installed, reboot the VM. We should now be able to use our Linux system like a physical machine. We can install software, access the internet, and perform other tasks.\n\n### Snapshots/Backups\n\nFinally, once everything is configured to our liking, we should take regular snapshots of our VM setup. Snapshots allow us to return to a known 'good state' if (when) anything goes wrong.\n\nBy following these steps, we can effectively set up a Linux virtual environment, which is excellent for learning new skills, testing applications, or running software that requires Linux.\n\n-->\n\n\n\n\n\n:::: {.callout-note collapse='false' appearance='simple' icon=false}\n\n## [See a typo, error, or something missing?]{style='font-weight: bold; font-size: 1.15em;'}\n\n::: {style='font-size: 1.00em; color: #282b2d;'}\n\n\nPlease open an issue on [GitHub.](https://github.com/mjfrigaard/fm-unix/issues/new)\n\n::: \n\n::::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}