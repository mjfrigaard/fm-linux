{
  "hash": "7b10fe3665564eb5a4f2e4b37bdaeccb",
  "result": {
    "engine": "knitr",
    "markdown": "---\nengine: knitr\nknitr:\n  opts_chunk: \n    collapse: true\n    comment: '#'\n---\n\n\n\n\n\n# System {#sec-sys}\n\n\n\n\n\n\n\n\n\n\n:::: {.callout-important collapse='false' appearance='default' icon='false'}\n\n## [Caution]{style='font-weight: bold; font-size: 1.25em;'}\n\n::: {style='font-size: 1.00em; color: #282b2d;'}\n\n\nThis section is under development. Thank you for your patience.\n  \n\n::: \n\n::::\n\n\n\n\n\n<!-- **System Monitoring**: `top`, `htop`, `free`, `df`, `du` -->\n\n### `top`\n\n**<code>@sec-top</code>** \n\n\n\n\n\n::: {.cell}\n\n```{.bash .cell-code}\ntop\n```\n:::\n\n\n\n\n\n![`top` in iTerm2](img/top.gif){width='100%' fig-align='center'}\n\n\n### `htop`\n\n**<code>@sec-htop</code>** \n\n### `free`\n\n**<code>@sec-free</code>** \n\n### `df`\n\n**<code>@sec-df</code>** (disk free) shows disk usage in a human-readable format, including the size, used space, available space, and the mount point of each filesystem. By default, it displays sizes in 1K blocks but can show them in a more readable format (like MB or GB) with the `-h` option (human-readable).\n\n\n\n\n\n::: {.cell}\n\n```{.bash .cell-code}\ndf\n#> Filesystem                       512-blocks      Used Available Capacity iused     ifree %iused  Mounted on\n#> /dev/disk1s1s1                    976490576  20002808  84798224    20%  403755 423991120    0%   /\n#> devfs                                   395       395         0   100%     684         0  100%   /dev\n#> /dev/disk1s3                      976490576   5059568  84798224     6%    5077 423991120    0%   /System/Volumes/Preboot\n#> /dev/disk1s5                      976490576   2097312  84798224     3%       1 423991120    0%   /System/Volumes/VM\n#> /dev/disk1s6                      976490576     39200  84798224     1%      19 423991120    0%   /System/Volumes/Update\n#> /dev/disk1s2                      976490576 861746736  84798224    92% 5662798 423991120    1%   /System/Volumes/Data\n#> map auto_home                             0         0         0   100%       0         0     -   /System/Volumes/Data/home\n```\n:::\n\n\n\n\n\n### `du`\n\n**<code>@sec-du</code>** \n\n### `ps`\n\n**<code>@sec-ps</code>** (process status) reports a snapshot of information about all running processes, regardless of the owner, including the user, CPU and memory usage, process ID, and the command that started each process. Command options can expand the selection to include other users' processes, full command lines, etc.\n\n\n\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nps\n#>   PID TTY           TIME CMD\n#>  2637 ttys000    0:00.04 -zsh\n#>  2646 ttys001    0:00.04 -zsh\n#>  2791 ttys002    0:00.03 -zsh\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}