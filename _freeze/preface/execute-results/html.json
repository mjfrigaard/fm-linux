{
  "hash": "68adb92574e09a006d444f82aede85c1",
  "result": {
    "engine": "knitr",
    "markdown": "---\nengine: knitr\nknitr:\n  opts_chunk: \n    collapse: true\n---\n\n\n\n\n\n# Preface {#sec-preface .unnumbered}\n\n\n\n\n\n\n\n\n\n\n:::: {.callout-warning collapse='false' appearance='default' icon='false'}\n\n## [Caution]{style='font-weight: bold; font-size: 1.25em;'}\n\n::: {style='font-size: 1.00em; color: #282b2d;'}\n\n\nThis section is being revised. Thank you for your patience.\n\n::: \n\n::::\n\n\n\n\n\n## Background \n\nI began writing this book when I started a new position as a Posit System Administrator with CDC's Enterprise Data, Analytics, and Visualization (EDAV) platform.[^edav] EDAV houses multiple enterprise data science products (Databricks, Power BI, Tableau, SAS Viya, etc.) including Posit Workbench, Connect, and Package Manager. The chapters contain the topics and tools I encountered regularly in my daily work (and some on my wish list).\n\n[^edav]: Read more about EDAV and the Data Modernization Initiative [here](https://www.cdc.gov/data-modernization/php/technologies/edav.html).\n\n## [Book outline]{style=\"font-size: 1.05em; font-weight: bold;\"}\n\nThis book gradually introduces the Linux environment, starting with the basics to more complex concepts, then covering multiple case studies. The first four sections of this manual cover concepts and materials for users new to Linux. If you’re familiar with command-line tools and regular expressions, skip these chapters.\n\n\n\n\n\n\n:::: {.callout-tip collapse='true' appearance='default' icon='false'}\n\n## [What is in a Field Manual?]{style='font-weight: bold; font-size: 1.10em;'}\n\n::: {style='font-size: 0.95em; color: #282b2d;'}\n\n\nA field manual (FM) is an educational tool that provides information, instructions, and techniques for various concepts and practices. \n  \nFiels Manuals function as both reference material and living documentation, encouraging updates and adaptations based on the given situation, available technology, or broader environment.[^field-manuals]\n\n![Example improvised litter made using tent poles and field jackets.](img/jacket-pole-litter.png){width='70%' fig-align='center'}\n  \n[^field-manuals]: This definition is based on the [U.S. Army Field Manuals (FMs).](https://github.com/mjfrigaard/fm-unix/tree/main/_assets/1965-fm531-boobytraps.pdf)\n\n::: \n\n::::\n\n\n\n\n\n### Introduction\n\nThe <strong>@sec-intro</strong> acquaints you with some background that formed the landscape of Unix systems. It explains the shell, a command-line interface (CLI), which is the gateway to leveraging the full potential of Linux.\n\n### Set-Ups\n\nSetting up your Linux environment is crucial before diving into writing commands and scripts. <strong>[Set-ups](setups.qmd)</strong> guide you through various options for setting up <strong>@sec-vms</strong>, <strong>@sec-shells</strong>, and <strong>@sec-terminals</strong>.[^zsh-bash]\n\n[^zsh-bash]: Most of these commands will work on any Shell (Zsh, Bash, etc.) program.\n\n### The Basics\n\nNavigating and managing files and folders are daily tasks for Linux users.  <strong>@sec-dirs</strong> cover essential commands such as cd for changing directories, `pwd` to print the current directory, `ls` for listing files, and `mkdir` for making directories.\n\nThe <strong>@sec-files</strong> chapter covers file manipulation commands like `cp` (copy), `mv` (move), `rm` (remove), and `less` for viewing file content, ensuring you can organize and manage your file system effectively. These commands are the building blocks for more complex operations in Linux.\n\n<strong>@sec-sys</strong> goes over common system commands like top for monitoring processes in real-time, `ps` for listing currently running processes, `kill` to stop a process, `df` (Disk Free) to display disk space usage on all mounted filesystems, and `du` (Disk Usage) to estimate file space usage. These commands help efficiently manage the system’s processes and resources, ensuring a clear view of resource allocation and consumption.\n\n### Syntax\n\nUnderstanding the shell syntax is vital for effectively communicating with a Linux system. The <strong>[Syntax](syntax.qmd)</strong> section demystifies the structure of commands, including how to differentiate between  <strong>@sec-commands</strong>, <strong>@sec-args</strong>, and <strong>@sec-options</strong> and manage inputs and outputs. This knowledge is critical to executing tasks reliably at the command line.\n\n<strong>@sec-pipes</strong> are a cornerstone of Linux productivity, enabling the output of one command to serve as the input to another.  <strong>[Syntax](syntax.qmd)</strong> also covers how to combine commands using `stdout` and `stdin`, allowing for robust command chains that can perform complex tasks. Understanding pipes unlocks a higher level of command-line efficiency.\n\n### Manipulating Text\n\nLinux systems are renowned for their powerful text manipulation capabilities.  <strong>[The Text](text.qmd)</strong> section covers using <strong>@sec-symbols-patterns</strong> to build regular expressions (regex). <strong>@sec-txt-cmds</strong> introduces commands such as `cat` for displaying file contents, `grep` for searching within files, sorting data, sorting data, `uniq` for filtering unique lines, and cutting, pasting, and joining for editing files. Mastering these commands will allow you to handle and process text data efficiently. <strong>[Text Editors](text_editors.qmd)</strong> cover Nano, vim, and Emacs.\n\n\n\n\n\n\n::::: {.column-margin}\n\n:::: {.callout-warning collapse='true' appearance='default' icon='false'}\n\n## [Under Development]{style='font-weight: bold; font-size: 0.95em;'}\n\n::: {style='font-size: 0.95em; color: #282b2d;'}\n\n\nThank you for your patience.\n\n::: \n\n::::\n\n:::::\n\n\n\n\n\n### Shell Scripts \n\nShell scripting is a powerful tool for automating repetitive tasks in Linux. This section introduces writing shell scripts, covering the basics of script creation, execution, and debugging. We’ll discuss how to automate simple tasks, making Linux tasks productive and enjoyable.\n\n\n\n\n\n\n::::: {.column-margin}\n\n:::: {.callout-warning collapse='true' appearance='default' icon='false'}\n\n## [Under Development]{style='font-weight: bold; font-size: 0.95em;'}\n\n::: {style='font-size: 0.95em; color: #282b2d;'}\n\n\nThank you for your patience.\n\n::: \n\n::::\n\n:::::\n\n\n\n\n\nThe <strong>[Format](format.qmd)</strong> chapter delves into the differences between these formats, guiding you on writing compatible scripts that can run across different Linux systems. <strong>[Permissions](permissions.qmd)</strong> explains how Linux permissions work and teaches you how to set and modify permissions to protect your data and system from unauthorized access.\n\n### Use cases \n\n\n\n\n\n\n::::: {.column-margin}\n\n:::: {.callout-warning collapse='true' appearance='default' icon='false'}\n\n## [Under Development]{style='font-weight: bold; font-size: 0.95em;'}\n\n::: {style='font-size: 0.95em; color: #282b2d;'}\n\n\nThank you for your patience.\n\n::: \n\n::::\n\n:::::\n\n\n\n\n\nThe data files used in this book are documented in [`data/README.md`](https://github.com/mjfrigaard/fm-unix/tree/main/data/README.md).\n\n\n### [Data files]{style=\"font-size: 1.05em; font-weight: bold;\"}\n\n#### Alan J. Perlis' Epigrams\n\nThe `ajperlis_epigrams.txt` file contains a collection of witty\nprogramming and systems design epigrams by Alan J. Perlis.[^readme-1]\nThese statements cover various topics related to computer programming,\nsoftware architecture, and philosophy. The epigrams offer nuggets of\nreflective and forward-thinking wisdom that provoke thought on the\ncomplexities of technology, the art of programming, and the interplay\nbetween human cognition and computational logic. This collection is\ninvaluable for programmers and computer scientists interested in the\ncultural and intellectual history of computing.\n\n[^readme-1]: Read the\n    [Wikipedia](https://en.wikipedia.org/wiki/Epigrams_on_Programming)\n    or download the [original\n    PDF](https://iiif.library.cmu.edu/file/Simon_box00075_fld05959_bdl0003_doc0002/Simon_box00075_fld05959_bdl0003_doc0002.pdf).\n\n#### Music Videos\n\nThe file `music_vids.tsv` is a tab-separated values (TSV) data file that\ndetails some of the most expensive music videos ever\nproduced.[^readme-2] Key information captured in the file includes:\n\n[^readme-2]: From the [List of most expensive music videos on\n    Wikipedia](https://en.wikipedia.org/wiki/List_of_most_expensive_music_videos)\n\n| Variable       | Description                                                                                   |\n|----------------|-----------------------------------------------------------------------------------------------|\n| `rank`         | The music video's position based on the production cost.                                      |\n| `title`        | The name of the music video.                                                                  |\n| `artists`      | The artist(s) who performed the song.                                                         |\n| `director`     | The director of the music video.                                                              |\n| `year`         | The year the music video was released.                                                        |\n| `cost_nominal` | The production cost at the release time, presented in U.S. dollars.                           |\n| `cost_adj`     | The production cost adjusted to current values for inflation, also presented in U.S. dollars. |\n\n#### Passwords\n\n`pwrds.csv` is a CSV (comma-separated values) file containing a\ncomprehensive list of commonly used passwords and attributes.[^readme-3]\nThe dataset contains information about passwords' strength, popularity\nrank, and resilience against online attacks. The dataset includes the\nfollowing variables:\n\n[^readme-3]: The original data comes from [Information is\n    Beautiful](https://docs.google.com/spreadsheets/d/1cz7TDhm0ebVpySqbTvrHrD3WpxeyE4hLZtifWSnoNTQ/edit#gid=16)\n\n| Variable           | Description                                                                                                                         |\n|--------------------|-------------------------------------------------------------------------------------------------------------------------------------|\n| **`password`**     | The actual password text.                                                                                                           |\n| **`rank`**         | Numerical ranking based on the frequency or commonness of the password.                                                             |\n| **`strength`**     | A numerical value representing the estimated password strength, where higher numbers indicate stronger passwords.                   |\n| **`online_crack`** | An estimate of how long it would take to crack this password using online attack methods, expressed in units from seconds to years. |\n\n#### Roxanne\n\nThe file `roxanne.txt` contains the lyrics to the song \"Roxanne\" by The\nPolice.[^readme-4] The structure of the lyrics emphasizes the repeated\nrefrain, \"You don't have to put on the red light,\" which is a metaphor\nfor not having to engage in prostitution.\n\n[^readme-4]: Read more about Roxanne (The Police song) on the [Wikipedia\n    page.](https://en.wikipedia.org/wiki/Roxanne_(The_Police_song))\n\n#### Trees\n\nThe file `trees.csv` is a comma-separated value (CSV) document that\ncatalogs some of the tallest trees in the world, providing detailed\ninformation on each tree listed.[^readme-5] This file is structured to\nprovide a quick reference to some of the most significant trees around\nthe world, highlighting their impressive heights and the diverse\nlocations they inhabit. Each entry in the dataset includes the following\nfields:\n\n[^readme-5]: From the [List of tallest trees on\n    Wikipedia.](https://en.wikipedia.org/wiki/List_of_tallest_trees)\n\n| Variable        | Description                                                 |\n|-----------------|-------------------------------------------------------------|\n| **`tree`**      | Identifier or common name used for the tree.                |\n| **`species`**   | Scientific name of the tree species.                        |\n| **`class`**     | Biological classification (e.g., Conifer, Flowering plant). |\n| **`ht_meters`** | Height of the tree in meters.                               |\n| **`ht_feet`**   | Height of the tree in feet.                                 |\n| **`location`**  | Specific location where the tree is found.                  |\n| **`continent`** | Continent on which the tree is located.                     |\n| **`name`**      | The colloquial name given to the tree, if applicable.       |\n\n#### Video Game Hall of Fame\n\nThe file `vg_hof.csv` is a comma-separated values (CSV) document that\ncontains a list of video games inducted into a hall of fame over several\nyears, from 2015 to 2024.[^readme-6] Each record in the dataset includes\nthe year of induction, the game's name, the developer, and the year the\ngame was initially released.\n\n[^readme-6]: From the [World Video Game Hall of Fame Wikipedia\n    page.](https://en.wikipedia.org/wiki/World_Video_Game_Hall_of_Fame)\n\nThe fields detailed in the dataset are:\n\n| Variable            | Description                                           |\n|---------------------|-------------------------------------------------------|\n| **`year`**          | The year the game was inducted into the hall of fame. |\n| **`game`**          | The name of the video game.                           |\n| **`developer`**     | The company or individual who developed the game.     |\n| **`year_released`** | The original year of the game's release.              |\n\n#### World Health Organization Tuberculosis\n\n`who_tb_data.csv` and `who_tb_data.tsv` are comma and tab-separated\nvalues (CSV and TSV) files that provides tuberculosis (TB) case data\nalongside population figures for selected countries over specific years,\nas reported by the World Health Organization (WHO).[^readme-7]\n\n[^readme-7]: From the [WHO global tuberculosis\n    programme](https://www.who.int/teams/global-tuberculosis-programme/data#csv_files)\n\nThe dataset includes the following fields:\n\n| Variable      | Description                                                                                                                                                                                     |\n|---------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| **`country`** | The name of the country where the data was recorded.                                                                                                                                            |\n| **`year`**    | The year in which the data was collected.                                                                                                                                                       |\n| **`type`**    | A descriptor of the data type, which can be either 'cases' indicating the number of tuberculosis cases reported, or 'population' representing the total population of the country in that year. |\n| **`count`**   | The numerical value corresponding to the type, either the number of TB cases or the population size.                                                                                            |\n\n#### Wu-Tang Clan\n\n`wu_tang.csv` is a comma-separated data file that provides the stage\nnames and real names of the members of the Wu-Tang Clan, a highly\ninfluential hip-hop group.[^readme-8] Each entry in the dataset\ncorrelates a member's popularly known stage name with their legal name,\noffering insight into the identities behind the personas. The data\nstructure includes two main fields:\n\n[^readme-8]: From the [Wu-Tang Clan Wikipedia\n    page](https://en.wikipedia.org/wiki/Wu-Tang_Clan).\n\n| Variable     | Description                                |\n|--------------|--------------------------------------------|\n| **`Member`** | The stage name of the Wu-Tang Clan member. |\n| **`Name`**   | The real name of the member.               |\n\n\n\n## [Recap]{style=\"font-size: 1.05em; font-weight: bold;\"}\n\nBy the end of this book, you'll have a solid understanding of the Linux operating system. You'll be equipped to navigate, manage files, write scripts, and set permissions confidently. Whether you're looking to enhance your career prospects, manage a new system, or simply satisfy your curiosity, this book will be your companion on a fascinating journey into the world of Linux.\n\n\n\n\n\n\n:::: {.callout-note collapse='false' appearance='simple' icon=false}\n\n## [See a typo, error, or something missing?]{style='font-weight: bold; font-size: 1.15em;'}\n\n::: {style='font-size: 1.00em; color: #282b2d;'}\n\n\nPlease open an issue on [GitHub.](https://github.com/mjfrigaard/fm-unix/issues/new)\n\n::: \n\n::::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}