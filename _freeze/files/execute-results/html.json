{
  "hash": "a6eecaba08426e666695bbf3f728164a",
  "result": {
    "engine": "knitr",
    "markdown": "---\nengine: knitr\nknitr:\n  opts_chunk: \n    collapse: true\n    comment: '#>'\n---\n\n\n\n\n\n# Files {#sec-files}\n\n\n\n\n\n\n\n\n\n\n:::: {.callout-important collapse='false' appearance='default' icon=false}\n\n## [Caution]{style='font-weight: bold; font-size: 1.25em;'}\n\n::: {style='font-size: 1.00em; color: #282b2d;'}\n\n\nThis section is under development. Thank you for your patience.\n  \n\n::: \n\n::::\n\n\n\n\n\nThe following commands are designed for creating, managing, and manipulating files. Some of these commands will also work on directories (which we covered in the previous chapter).\n\n## Create \n\nTo create a new file (`data/who_tb_data.txt`), use the **<code>@sec-touch</code>** command. \n\n\n\n\n\n::: {.cell}\n\n```{.bash .cell-code}\ntouch data/who_tb_data.txt\n```\n:::\n\n\n\n\n\nWe can add some contents to the `data/who_tb_data.txt` file using **<code>@sec-echo</code>** and the `>` operator.\n\n\n\n\n\n::: {.cell}\n\n```{.bash .cell-code}\necho \"country\tyear\ttype\tcount\nAfghanistan\t1999\tcases\t745\nAfghanistan\t1999\tpopulation\t19987071\nAfghanistan\t2000\tcases\t2666\nAfghanistan\t2000\tpopulation\t20595360\nBrazil\t1999\tcases\t37737\nBrazil\t1999\tpopulation\t172006362\nBrazil\t2000\tcases\t80488\nBrazil\t2000\tpopulation\t174504898\nChina\t1999\tcases\t212258\nChina\t1999\tpopulation\t1272915272\nChina\t2000\tcases\t213766\nChina\t2000\tpopulation\t1280428583\" > data/who_tb_data.txt\n```\n:::\n\n\n\n\n\n## View \n\n**<code>@sec-file</code>** gives us a summary of what a file is or what it contains, like telling us what's in `data/who_tb_data.txt`.\n\n\n\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nfile data/who_tb_data.txt\n#> data/who_tb_data.txt: ASCII text\n```\n:::\n\n\n\n\n\nWe can use **<code>@sec-head</code>** and **<code>@sec-tail</code>** to view the top and bottom of `data/who_tb_data.txt`.\n\n\n\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nhead data/vg_hof.tsv\n#> year\tgame\tdeveloper\tyear_released\n#> 2015\tDOOM\tid Software\t1993\n#> 2015\tPac-Man\tNamco\t1980\n#> 2015\tPong\tAtari\t1972\n#> 2015\tSuper Mario Bros.\tNintendo\t1985\n#> 2015\tTetris\tAlexey Pajitnov\t1985\n#> 2015\tWorld of Warcraft\tBlizzard Entertainment\t2004\n#> 2015\tAngry Birds\tRovio Entertainment\t2009\n#> 2015\tFIFA International Soccer\tEA Canada\t1993\n#> 2015\tThe Legend of Zelda\tNintendo\t1986\n```\n:::\n\n::: {.cell}\n\n```{.bash .cell-code}\ntail data/vg_hof.tsv\n#> 2024\tGuitar Hero\tHarmonix\t2005\n#> 2024\tMetroid\tNintendo\t1986\n#> 2024\tMyst\tCyan\t1993\n#> 2024\tNeopets\tAdam Powell, Donna Powell\t1999\n#> 2024\tResident Evil\tCapcom\t1996\n#> 2024\tSimCity\tMaxis\t1989\n#> 2024\tTokimeki Memorial\tKonami\t1994\n#> 2024\tTony Hawk's Pro Skater\tNeversoft\t1999\n#> 2024\tUltima\tRichard Garriott, Origin Systems\t1981\n#> 2024\tYou Don't Know Jack\tJellyvision\t1995\n```\n:::\n\n\n\n\n\n\n**<code>@sec-less</code>** lets you skim through a file on your computer, moving forwards and backwards as you please. We'll use less on the `data/vg_hof.tsv` file.\n\n\n\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nless data/vg_hof.tsv\n```\n:::\n\n\n\n\n\n\n![Enter 'q' to exit the `less` scroll](img/less.gif){width='100%' fig-align='center'}\n\n\n## Search \n\n**<code>@sec-find</code>** is used to search for files and directories in a directory hierarchy based on various criteria such as name, size, file type, and modification time. \nFor example, the commands below look in the `data` directory for files with a `.txt` extension (`-name \"*.txt\"`) and finds files modified in the last 2 days (`-mtime -2`).\n\n\n\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nfind data -name \"*.txt\" -mtime -1\n#> data/who_tb_data.txt\n```\n:::\n\n\n\n\n\n## Count\n\n**<code>@sec-wc</code>** (**word count**) counts the number of lines, words, and characters in the given input. If a file name is provided, it performs the count on the file; otherwise, it reads from the standard input.\n\n\n\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nfind data -name \"*.txt\" -mtime -1 | wc\n#>        1       1      21\n```\n:::\n\n::: {.cell}\n\n```{.bash .cell-code}\ncounts=$(wc data/who_tb_data.txt | awk '{print $1, $2, $3}')\nprintf \"   lines   words characters\\n\"\nprintf \"%8s %7s %10s\\n\" $counts\n#>    lines   words characters\n#>       13      52        381\n```\n:::\n\n\n\n\n\n\n## Permissions & Priviledges \n\n### `chown` \n\n### `sudo` \n\n## Documentation \n\n### `man` \n\n`man` (**Manual**) displays the user manual of any command that we can run on the terminal. It's the go-to resource for learning about the options, arguments, and examples of how to use commands.\n\n### `help` \n\n`help` or `--help` option provides information about built-in commands and usage guidelines. It's a quick way to get help for shell built-ins or to understand the basic usage of a command. \n\n\n\n\n\n\n:::: {.callout-note collapse='false' appearance='default' icon=false}\n\n## [See a typo, error, or something missing?]{style='font-weight: bold; font-size: 0.95em;'}\n\n::: {style='font-size: 0.90em; color: #282b2d;'}\n\n\nPlease open an issue on [GitHub.](https://github.com/mjfrigaard/fm-unix/issues/new)\n\n::: \n\n::::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}