{
  "hash": "8dd71e37f9a7240e0b94383b1d70ba6b",
  "result": {
    "engine": "knitr",
    "markdown": "---\nengine: knitr\nknitr:\n  opts_chunk: \n    collapse: true\n    comment: '# '\n---\n\n\n\n\n\n# Options {#sec-options}\n\n\n\n\n\n\n\n\n\n\n:::: {.callout-important collapse='false' appearance='default' icon=false}\n\n## [Caution]{style='font-weight: bold; font-size: 1.25em;'}\n\n::: {style='font-size: 1.00em; color: #282b2d;'}\n\n\nThis section is under development. Thank you for your patience.\n  \n\n::: \n\n::::\n\n\n\n\n\n**Options** (sometimes called flags) modify how a command operates, allowing for more control over its behavior. Options often start with one or two dashes (`-` or `--`). For example, in `ls -l`, the `-l` option tells `ls` to use a long listing format.\n\n\n\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nls -l /\n#  total 10\n#  drwxrwxr-x  59 root  admin  1888 Apr  8 04:05 Applications\n#  drwxr-xr-x  73 root  wheel  2336 Apr  2 11:16 Library\n#  drwxr-xr-x@ 10 root  wheel   320 Mar 20 23:13 System\n#  drwxr-xr-x   5 root  admin   160 Apr  2 11:13 Users\n#  drwxr-xr-x   3 root  wheel    96 Apr  9 03:20 Volumes\n#  drwxr-xr-x@ 39 root  wheel  1248 Mar 20 23:13 bin\n#  drwxr-xr-x   2 root  wheel    64 Mar  3  2021 cores\n#  dr-xr-xr-x   3 root  wheel  4713 Apr  9 03:20 dev\n#  lrwxr-xr-x@  1 root  wheel    11 Mar 20 23:13 etc -> private/etc\n#  lrwxr-xr-x   1 root  wheel    25 Apr  9 03:20 home -> /System/Volumes/Data/home\n#  drwxr-xr-x   4 root  wheel   128 Sep 25  2023 opt\n#  drwxr-xr-x   6 root  wheel   192 Apr  9 03:20 private\n#  drwxr-xr-x@ 64 root  wheel  2048 Mar 20 23:13 sbin\n#  lrwxr-xr-x@  1 root  wheel    11 Mar 20 23:13 tmp -> private/tmp\n#  drwxr-xr-x@ 11 root  wheel   352 Mar 20 23:13 usr\n#  lrwxr-xr-x@  1 root  wheel    11 Mar 20 23:13 var -> private/var\n```\n:::\n\n\n\n\n\nOptions modify how the action is performed.\n\n## Standard Input and Standard Output\n\nTwo key concepts in Unix text processing are standard input (`stdin`) and standard output (`stdout`). `stdin` is the default input stream, which often comes from the keyboard or the output of another command. `stdout` is the default output stream, typically the terminal screen. Many Unix commands read from `stdin` when no file is specified and write to `stdout`, allowing the output of one command to become the input of another. This design facilitates the chaining of commands (piping) to perform complex operations in a streamlined manner.\n\n-   **Input** generally refers to the data fed into a command, which can come from `stdin` or be specified as arguments.\n\n-   **Output** is the data produced by a command, displayed on `stdout` unless redirected.\n\n\n## Recap\n\nThis framework of commands, arguments, options, and the interplay of input (`stdin`), output (`stdout`) , and pipes enables sophisticated data processing and manipulation directly from the terminal.\n\n\n\n\n\n\n:::: {.callout-note collapse='false' appearance='default' icon=false}\n\n## [See a typo, error, or something missing?]{style='font-weight: bold; font-size: 0.95em;'}\n\n::: {style='font-size: 0.90em; color: #282b2d;'}\n\n\nPlease open an issue on [GitHub.](https://github.com/mjfrigaard/fm-unix/issues/new)\n\n::: \n\n::::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}