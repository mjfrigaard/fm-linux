---
engine: knitr
knitr:
  opts_chunk: 
    collapse: true
    comment: '#>'
---

# Files {#sec-files}

```{bash}
#| label: setup
#| include: false
whoami
```


```{r}
#| label: common
#| include: false
# Sys.setenv('QUARTO_PROJECT_DIR' = 'data')
# Sys.getenv('QUARTO_PROJECT_DIR')
source("_common.R")
```


```{r}
#| label: co_box_dev
#| echo: false
#| results: asis
#| eval: true
co_box(
  color = "r",
  look = "default", 
  hsize = "1.25", 
  size = "1.00", 
  header = "Caution", 
  fold = FALSE,
  contents = "This section is under development. Thank you for your patience.
  "
)
```


### `file` 

**`file`** gives you a summary of what a computer file is or what it contains, like telling you if a tool in `/bin/pax` is a program you can run or a text file.

```{bash}
file /bin/pax
```

### `less` 

**`less`** lets you skim through a file on your computer, moving forwards and backwards as you please.

```{bash}
#| eval: false
less data/vg_hof.tsv
```

![Enter `less` in the Terminal to scroll](img/less.gif){width='100%' fig-align='center'}

### `find` 

`find` is used to search for files and directories in a directory hierarchy based on various criteria such as name, size, file type, and modification time. 

### `wc` 

`wc` (**word count**) counts the number of lines, words, and characters in the given input. If a file name is provided, it performs the count on the file; otherwise, it reads from the standard input.

## Permissions & Priviledges 

### `chown` 

### `sudo` 

## Documentation 

### `man` 

`man` (**Manual**) displays the user manual of any command that we can run on the terminal. It's the go-to resource for learning about the options, arguments, and examples of how to use commands.

### `help` 

`help` or `--help` option provides information about built-in commands and usage guidelines. It's a quick way to get help for shell built-ins or to understand the basic usage of a command. 

```{r}
#| label: git_contrib_box
#| echo: false
#| results: asis
#| eval: true
git_contrib_box()
```